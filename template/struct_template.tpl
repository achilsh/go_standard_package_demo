// is generated by tool, not to edit it!!!
package {{.PkgName}}
import (
    "fmt"
)

{{/**.FieldName 是 go 源码中 struct field 字段***/}}
type {{.BusiStructType}} struct {
    {{.FieldOneName}} string 
    {{.FieldTwoName}} int32 
    {{.FieldThreeName}} float32
    {{ range .Fields }}   {{- /*** 遍历 .Fields 中的每一个item。并将item 作为 . 的值。***/ -}}
    {{.FieldName}}  {{.FieldType}} {{/** .表示遍历的当前元素，而非传给模板的参数。 **/}}
    {{end}}
    //
}

func (s *{{.BusiStructType}}) {{.MemberOneFunc}}() {{.MemberOneFuncRet}} {
    //do somethings
    var ret {{.MemberOneFuncRet}}
    return ret
}
func (s *{{.BusiStructType}}) {{.MemberTwoFunc}} () ({{.MemberTwoFuncRet}}, error) {
    var ret {{.MemberTwoFuncRet}}

    {{/** 根据条件来判断流程 ***/}}
    {{if .Cache }} 
    fmt.Println("is cache true")
    return ret, errors.New("is cached")
    {{else}}
    return ret, nil
    {{end}}
}

{{/** 将打打印传入所有的参数，类似：{templateDemo StructCreateDemo Name Age Score}  **/}}
{{ . }}
//

{{/*** 定义map 的key 和 value的 模板 **/}}
var map[{{.MapKeyType}}] *{{.BusiStructType}} = make(map[{{.MapKeyType}}] *{{.BusiStructType}})

func {{.FuncNameOne}}() {
    fmt.Println("call: {{.FuncNameOne}})
}





